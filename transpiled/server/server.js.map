{"version":3,"sources":["../../src/server/server.jsx"],"names":["jsdom","require","assetsPath","__dirname","templatePath","PORT","process","env","renderString","filename","data","options","Promise","resolve","reject","renderFile","err","str","server","createServer","use","plugins","acceptParser","acceptable","queryParser","bodyParser","gzipResponse","parse","pre","req","res","next","setHeader","charSet","get","path","name","page","htmlWebpackPlugin","render","existsSync","webpackAssets","JSON","readFileSync","scripts","Object","keys","sort","map","entry","js","join","replace","status","write","end","listen","error","console","log"],"mappings":"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","file":"server.js","sourcesContent":["import 'babel-polyfill';\nimport fs from 'fs';\nimport {resolve} from 'path';\nimport ejs from 'ejs';\nimport restify from 'restify';\nimport cookieParser from 'restify-cookies';\nimport serveStatic from 'serve-static-restify';\nimport validator from 'restify-joi-middleware';\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport ExamplePage from '../shared/components/example/index';\n\nconst jsdom = require(\"jsdom\");\n\nconst assetsPath = resolve(__dirname, '../../build/webpack-assets.json');\nconst templatePath = resolve(__dirname, '../../src/shared/template/index.ejs');\nconst PORT = process.env.PORT || 3050;\n\nconst renderString = async (filename, data, options)=> new Promise((resolve, reject) => {\n    ejs.renderFile(filename, data, options, (err, str) => {\n      if (err !== null) return reject(err);\n      return resolve(str);\n    });\n});\n\nconst server = restify.createServer();\nserver.use(restify.plugins.acceptParser(server.acceptable));\nserver.use(restify.plugins.queryParser());\nserver.use(restify.plugins.bodyParser());\nserver.use(restify.plugins.gzipResponse());\nserver.use(cookieParser.parse);\nserver.use(validator());\n\nserver.pre(serveStatic(resolve(__dirname,'../../build/')));\n\nserver.pre((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Headers', 'Access-Control-Request-Method, X-Requested-With, Content-Type, Authorization');\n  res.setHeader('Access-Control-Allow-Credentials', true);\n  res.charSet('utf-8');\n  return next();\n});\n\nserver.get({\n  path: '/',\n  name: 'Get articles',\n  },  async (req, res, next) => {\n    const page = renderToString(<ExamplePage/>);\n    let render = await renderString(templatePath, {\n      htmlWebpackPlugin: {\n        options: {\n          render: page\n        }\n      }\n    });\n\n    if (fs.existsSync(assetsPath)) {\n      const webpackAssets = JSON.parse(fs.readFileSync(assetsPath));\n      const scripts = Object.keys(webpackAssets).sort().map((entry)=>`<script src=\"${ webpackAssets[entry].js }\"></script>`).join('');\n      render = render.replace('</body>',`${scripts}</body>`);\n    }\n    res.status(200);\n    res.write(render);\n    res.end();\n    return next();\n});\n\n(async () => {\n  try {\n    server.listen(PORT);\n  } catch (error) {\n    console.log(error); // eslint-disable-line\n  }\n})();\n"]}